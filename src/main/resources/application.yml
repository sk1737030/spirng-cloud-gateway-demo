server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates: # 클라이언트가 forwarding 요청하는 곳
            - Path=/order-service/login
        - id: user-service
          uri: lb://USER-SERVICE
          predicates: # 클라이언트가 forwarding 요청하는 곳
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie # 요청을 초기화시키기위해 즉 매 번 새롭게 요청이되도록 하기 위해
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
            uri: lb://USER-SERVICE
            predicates: # 클라이언트가 forwarding 요청하는 곳
              - Path=/user-service/**
              - method=POST
            filters: # rewritepath user-service 앞에를 지우고 segment만 rewrite
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
            uri: lb://USER-SERVICE
            predicates: # 클라이언트가 forwarding 요청하는 곳
              - Path=/user-service/**
              - Method=GET
            filters:
              - RemoveRequestHeader=Cookie
              - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates: # 클라이언트가 forwarding 요청하는 곳
            - Path=/catalog-service/**
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates:
            - Path=/first-service/**
          filters:
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Spring Cloud Gateway Logging Filter
                preLogger: true
                postLogger: true
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true

